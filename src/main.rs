#![allow(unused_must_use)]
extern crate sysinfo;
use chrono::{Local, NaiveDateTime};
use sysinfo::{Disks, System};
mod windows;

async fn display() {
    let shell: String = windows::fetch_latest_ps_version();
    let windoww: (
        windows::Win32_OperatingSystem,
        windows::Win32_Processor,
        windows::Win32_VideoController,
        Vec<windows::Win32_LogicalDisk>,
    ) = windows::fetch().await;
    let uptime: chrono::TimeDelta = Local::now().naive_local().signed_duration_since(
        NaiveDateTime::parse_from_str(
            &windoww.0.last_boot_up_time[..windoww.0.last_boot_up_time.len() - 4],
            "%Y%m%d%H%M%S%.6f",
        )
        .unwrap(),
    );
    let info: os_info::Info = os_info::get();
    let binding: Option<&str> = info.edition();
    let osname: &str = binding.as_deref().expect("wtf");
    let binding: Option<&str> = info.architecture();
    let architecture: &str = binding.as_deref().expect("wtf");
    let binding: Option<String> = System::host_name();
    let hostname: &str = binding.as_deref().expect("wtf");
    let mut sys: System = System::new_all();
    let mut disks_info: String = String::new();
    let disks: Disks = Disks::new_with_refreshed_list();
    sys.refresh_all();
    for (index, disk) in disks.iter().enumerate() {
        if index > 0 {
            disks_info.push_str(" | ");
        }
        let mount: std::borrow::Cow<str> = disk.mount_point().to_string_lossy();
        let mount2: String = mount.to_string().replace(r"\", "");
        let space: u64 = disk.total_space() / 1024 / 1024 / 1024;
        disks_info.push_str(&format!("({}) {} GB", mount2, space));
    }
    println!("\x1B[48;2;245;221;0m                                                                        \x1B[m Host       : {}
\x1B[48;2;245;221;0m                                                                        \x1B[m OS         : {} {}
\x1B[48;2;245;221;0m                           \x1B[38;2;13;11;0;48;2;245;221;0m▄▄\x1B[48;2;245;221;0m                                           \x1B[m Kernel     : {}
\x1B[48;2;245;221;0m                           \x1B[38;2;245;221;0;48;2;20;17;0m▄\x1B[38;2;245;221;0;48;2;112;101;0m▄\x1B[38;2;2;2;0;48;2;245;221;0m▄\x1B[38;2;245;221;0;48;2;224;201;0m▄\x1B[38;2;35;31;0;48;2;198;178;0m▄\x1B[48;2;245;221;0m \x1B[38;2;26;23;0;48;2;245;221;0m▄\x1B[38;2;8;7;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m                                     \x1B[m Shell      : {}
\x1B[48;2;245;221;0m                           \x1B[38;2;245;221;0;48;2;57;49;0m▄\x1B[38;2;245;221;0;48;2;0;0;0m▄\x1B[38;2;245;221;0;48;2;241;217;0m▄\x1B[48;2;245;221;0m  \x1B[38;2;245;221;0;48;2;220;198;0m▄\x1B[38;2;245;221;0;48;2;243;219;0m▄\x1B[38;2;155;139;0;48;2;243;219;0m▄\x1B[38;2;224;202;0;48;2;15;13;0m▄\x1B[38;2;245;221;0;48;2;0;0;0m▄\x1B[38;2;19;17;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m                                  \x1B[m Uptime     : {} hs, {} min
\x1B[48;2;245;221;0m                                    \x1B[38;2;245;221;0;48;2;243;219;0m▄\x1B[38;2;244;220;0;48;2;0;0;0m▄\x1B[38;2;0;0;0;48;2;29;26;0m▄\x1B[38;2;0;0;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m                                \x1B[m Resolution : {}x{} | {}hz
\x1B[48;2;245;221;0m                                     \x1B[38;2;245;221;0;48;2;106;95;0m▄\x1B[38;2;90;80;0;48;2;244;220;0m▄\x1B[38;2;0;0;0;48;2;72;64;0m▄\x1B[38;2;6;5;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m                               \x1B[m GPU        : {} 
\x1B[48;2;245;221;0m                              \x1B[38;2;46;41;0;48;2;245;221;0m▄\x1B[38;2;33;29;0;48;2;245;221;0m▄\x1B[38;2;20;18;0;48;2;135;122;0m▄\x1B[48;2;0;0;0m  \x1B[38;2;245;221;0;48;2;19;17;0m▄\x1B[38;2;0;0;0;48;2;175;158;0m▄\x1B[38;2;107;96;0;48;2;245;221;0m▄\x1B[38;2;0;0;0;48;2;216;194;0m▄\x1B[38;2;245;221;0;48;2;0;0;0m▄\x1B[48;2;0;0;0m \x1B[48;2;245;221;0m                               \x1B[m CPU        : {}
\x1B[48;2;245;221;0m                             \x1B[38;2;30;26;0;48;2;245;221;0m▄\x1B[38;2;174;157;0;48;2;0;0;0m▄\x1B[38;2;12;11;0;48;2;0;0;0m▄\x1B[38;2;245;221;0;48;2;170;153;0m▄\x1B[38;2;245;221;0;48;2;66;59;0m▄\x1B[38;2;245;221;0;48;2;138;123;0m▄\x1B[38;2;245;221;0;48;2;139;125;0m▄\x1B[38;2;245;221;0;48;2;207;187;0m▄\x1B[38;2;23;20;0;48;2;0;0;0m▄\x1B[38;2;245;221;0;48;2;138;123;0m▄\x1B[48;2;0;0;0m \x1B[38;2;122;109;0;48;2;245;221;0m▄\x1B[38;2;0;0;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m                              \x1B[m Memory     : {} MB / {} MB
\x1B[48;2;245;221;0m                             \x1B[38;2;245;221;0;48;2;124;112;0m▄\x1B[48;2;0;0;0m   \x1B[38;2;182;164;0;48;2;245;221;0m▄\x1B[38;2;0;0;0;48;2;245;221;0m▄\x1B[38;2;99;89;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m \x1B[38;2;0;0;0;48;2;37;33;0m▄\x1B[38;2;170;153;0;48;2;162;146;0m▄\x1B[38;2;206;186;0;48;2;124;111;0m▄\x1B[38;2;70;63;0;48;2;52;47;0m▄\x1B[38;2;203;183;0;48;2;0;0;0m▄\x1B[38;2;177;159;0;48;2;0;0;0m▄\x1B[38;2;176;158;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m                            \x1B[m Disk       : {}
\x1B[48;2;245;221;0m                            \x1B[38;2;161;144;0;48;2;245;221;0m▄\x1B[48;2;0;0;0m \x1B[38;2;0;0;0;48;2;68;61;0m▄\x1B[38;2;50;45;0;48;2;13;12;0m▄\x1B[38;2;241;217;0;48;2;234;211;0m▄\x1B[38;2;202;182;0;48;2;1;0;0m▄\x1B[38;2;0;0;0;48;2;174;157;0m▄\x1B[38;2;159;143;0;48;2;210;190;0m▄\x1B[38;2;13;11;0;48;2;18;16;0m▄\x1B[38;2;10;8;0;48;2;0;0;0m▄\x1B[38;2;142;127;0;48;2;0;0;0m▄\x1B[48;2;0;0;0m \x1B[38;2;146;132;0;48;2;245;221;0m▄\x1B[38;2;0;0;0;48;2;172;155;0m▄\x1B[38;2;90;80;0;48;2;0;0;0m▄\x1B[48;2;0;0;0m \x1B[48;2;245;221;0m                            \x1B[m
\x1B[48;2;245;221;0m                            \x1B[38;2;240;217;0;48;2;244;220;0m▄\x1B[38;2;216;194;0;48;2;8;7;0m▄\x1B[38;2;143;128;0;48;2;46;41;0m▄\x1B[38;2;245;221;0;48;2;1;0;0m▄\x1B[38;2;245;221;0;48;2;74;66;0m▄\x1B[38;2;245;221;0;48;2;208;187;0m▄\x1B[38;2;245;221;0;48;2;228;206;0m▄\x1B[38;2;245;221;0;48;2;207;187;0m▄\x1B[38;2;245;221;0;48;2;97;87;0m▄\x1B[38;2;245;221;0;48;2;78;70;0m▄\x1B[38;2;245;221;0;48;2;243;220;0m▄\x1B[38;2;23;20;0;48;2;0;0;0m▄\x1B[38;2;0;0;0;48;2;166;150;0m▄\x1B[48;2;245;221;0m \x1B[38;2;164;147;0;48;2;128;115;0m▄\x1B[38;2;0;0;0;48;2;216;194;0m▄\x1B[48;2;245;221;0m                            \x1B[m
\x1B[48;2;245;221;0m                            \x1B[38;2;172;154;0;48;2;96;85;0m▄\x1B[38;2;0;0;0;48;2;162;145;0m▄\x1B[38;2;0;0;0;48;2;65;58;0m▄\x1B[48;2;245;221;0m \x1B[38;2;0;0;0;48;2;245;221;0m▄\x1B[38;2;130;117;0;48;2;245;221;0m▄\x1B[38;2;209;188;0;48;2;245;221;0m▄\x1B[38;2;0;0;0;48;2;245;221;0m▄▄▄\x1B[38;2;25;23;0;48;2;245;221;0m▄\x1B[38;2;0;0;0;48;2;203;182;0m▄\x1B[38;2;0;0;0;48;2;167;150;0m▄\x1B[48;2;0;0;0m \x1B[38;2;0;0;0;48;2;245;221;0m▄\x1B[38;2;128;115;0;48;2;0;0;0m▄\x1B[38;2;65;59;0;48;2;0;0;0m▄\x1B[48;2;245;221;0m                           \x1B[m
\x1B[48;2;245;221;0m                          \x1B[38;2;220;199;0;48;2;245;221;0m▄\x1B[38;2;98;88;0;48;2;110;98;0m▄\x1B[38;2;0;0;0;48;2;5;4;0m▄\x1B[38;2;128;116;0;48;2;0;0;0m▄\x1B[48;2;0;0;0m \x1B[38;2;233;209;0;48;2;234;211;0m▄\x1B[38;2;15;13;0;48;2;235;211;0m▄\x1B[38;2;7;6;0;48;2;0;0;0m▄\x1B[38;2;0;0;0;48;2;34;30;0m▄\x1B[38;2;245;221;0;48;2;84;74;0m▄\x1B[38;2;236;213;0;48;2;217;194;0m▄\x1B[38;2;0;0;0;48;2;242;218;0m▄\x1B[38;2;136;122;0;48;2;245;221;0m▄\x1B[38;2;1;1;0;48;2;245;221;0m▄\x1B[38;2;0;0;0;48;2;70;63;0m▄\x1B[38;2;0;0;0;48;2;98;88;0m▄\x1B[38;2;232;209;0;48;2;195;176;0m▄\x1B[48;2;0;0;0m \x1B[38;2;193;173;0;48;2;178;160;0m▄\x1B[38;2;8;7;0;48;2;235;211;0m▄\x1B[48;2;245;221;0m                          \x1B[m
\x1B[48;2;245;221;0m                         \x1B[38;2;234;211;0;48;2;245;221;0m▄\x1B[38;2;185;166;0;48;2;5;4;0m▄\x1B[38;2;245;221;0;48;2;0;0;0m▄\x1B[38;2;106;95;0;48;2;3;2;0m▄\x1B[38;2;245;221;0;48;2;2;2;0m▄\x1B[48;2;245;221;0m  \x1B[38;2;245;221;0;48;2;0;0;0m▄▄\x1B[38;2;245;221;0;48;2;141;126;0m▄\x1B[38;2;245;221;0;48;2;204;183;0m▄\x1B[48;2;245;221;0m \x1B[38;2;245;221;0;48;2;38;34;0m▄\x1B[38;2;245;221;0;48;2;0;0;0m▄▄\x1B[38;2;245;221;0;48;2;18;16;0m▄\x1B[38;2;2;1;0;48;2;244;220;0m▄\x1B[38;2;94;85;0;48;2;0;0;0m▄\x1B[38;2;204;183;0;48;2;0;0;0m▄\x1B[48;2;0;0;0m \x1B[38;2;234;211;0;48;2;0;0;0m▄\x1B[48;2;245;221;0m                          \x1B[m
\x1B[48;2;245;221;0m                    \x1B[38;2;202;191;1;48;2;245;221;0m▄\x1B[48;2;245;221;0m    \x1B[38;2;245;221;0;48;2;223;201;0m▄\x1B[48;2;0;0;0m \x1B[38;2;242;219;0;48;2;0;0;0m▄\x1B[38;2;0;0;0;48;2;35;32;0m▄\x1B[38;2;39;35;0;48;2;22;20;0m▄\x1B[38;2;0;0;0;48;2;245;221;0m▄\x1B[38;2;18;68;18;48;2;22;71;17m▄\x1B[38;2;19;64;15;48;2;22;71;17m▄\x1B[38;2;18;68;18;48;2;245;221;0m▄\x1B[38;2;22;71;17;48;2;245;221;0m▄\x1B[38;2;28;40;2;48;2;245;221;0m▄\x1B[38;2;18;68;18;48;2;245;221;0m▄\x1B[38;2;18;68;18;48;2;134;147;6m▄\x1B[38;2;33;78;16;48;2;245;221;0m▄\x1B[38;2;0;0;0;48;2;245;221;0m▄\x1B[38;2;52;46;0;48;2;9;8;0m▄\x1B[38;2;0;0;0;48;2;245;221;0m▄\x1B[38;2;88;79;0;48;2;228;205;0m▄\x1B[38;2;200;181;0;48;2;244;220;0m▄\x1B[38;2;244;220;0;48;2;0;0;0m▄\x1B[38;2;181;163;0;48;2;0;0;0m▄\x1B[38;2;16;14;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m     \x1B[38;2;224;202;0;48;2;245;221;0m▄\x1B[38;2;202;182;0;48;2;183;164;0m▄\x1B[38;2;237;213;0;48;2;176;157;0m▄\x1B[48;2;245;221;0m                 \x1B[m
\x1B[48;2;245;221;0m                 \x1B[38;2;90;116;10;48;2;245;221;0m▄\x1B[48;2;18;68;18m \x1B[38;2;18;68;18;48;2;151;157;5m▄\x1B[38;2;18;68;18;48;2;28;75;17m▄\x1B[38;2;27;42;2;48;2;18;68;18m▄\x1B[38;2;18;68;18;48;2;33;78;16m▄\x1B[38;2;30;35;0;48;2;18;68;18m▄\x1B[38;2;24;51;8;48;2;174;173;3m▄\x1B[38;2;30;35;0;48;2;18;68;18m▄\x1B[38;2;30;35;0;48;2;0;0;0m▄\x1B[48;2;0;0;0m \x1B[38;2;227;205;0;48;2;0;0;0m▄\x1B[38;2;66;59;0;48;2;242;218;0m▄\x1B[38;2;132;119;0;48;2;245;221;0m▄\x1B[38;2;20;17;0;48;2;42;37;0m▄\x1B[38;2;0;0;0;48;2;134;120;0m▄\x1B[38;2;220;198;0;48;2;0;0;0m▄\x1B[38;2;245;221;0;48;2;10;11;0m▄\x1B[38;2;33;30;0;48;2;8;12;0m▄\x1B[48;2;0;0;0m \x1B[38;2;191;172;0;48;2;0;0;0m▄\x1B[38;2;244;220;0;48;2;245;221;0m▄\x1B[38;2;0;0;0;48;2;153;138;0m▄\x1B[38;2;8;7;0;48;2;0;0;0m▄\x1B[38;2;0;0;0;48;2;217;195;0m▄\x1B[38;2;0;1;0;48;2;0;0;0m▄\x1B[38;2;18;68;18;48;2;30;26;0m▄\x1B[38;2;244;220;0;48;2;241;217;0m▄\x1B[38;2;245;221;0;48;2;244;220;0m▄\x1B[38;2;0;0;0;48;2;81;72;0m▄\x1B[38;2;27;24;0;48;2;0;0;0m▄\x1B[38;2;40;35;0;48;2;32;29;0m▄\x1B[38;2;59;53;0;48;2;245;221;0m▄\x1B[38;2;245;221;0;48;2;228;205;0m▄\x1B[38;2;159;143;0;48;2;0;0;0m▄\x1B[38;2;0;0;0;48;2;5;5;0m▄\x1B[38;2;245;221;0;48;2;0;0;0m▄\x1B[38;2;190;183;2;48;2;245;221;0m▄\x1B[48;2;245;221;0m                 \x1B[m
\x1B[48;2;245;221;0m                \x1B[38;2;245;221;0;48;2;18;68;18m▄\x1B[38;2;227;209;0;48;2;18;68;18m▄\x1B[38;2;167;168;3;48;2;18;68;18m▄\x1B[38;2;229;210;0;48;2;18;68;18m▄\x1B[38;2;205;193;1;48;2;18;68;18m▄\x1B[38;2;182;178;2;48;2;29;37;0m▄\x1B[38;2;151;157;6;48;2;18;68;18m▄\x1B[38;2;245;221;0;48;2;18;68;18m▄▄\x1B[38;2;231;210;0;48;2;18;68;18m▄\x1B[38;2;245;221;0;48;2;18;68;18m▄▄\x1B[38;2;245;221;0;48;2;17;66;17m▄\x1B[38;2;34;78;16;48;2;0;0;0m▄\x1B[38;2;18;68;18;48;2;0;0;0m▄\x1B[38;2;18;67;18;48;2;0;0;0m▄\x1B[38;2;1;9;1;48;2;0;0;0m▄\x1B[38;2;4;4;0;48;2;241;217;0m▄\x1B[38;2;128;115;0;48;2;45;40;0m▄\x1B[38;2;0;0;0;48;2;101;90;0m▄\x1B[38;2;0;0;0;48;2;116;105;0m▄\x1B[38;2;0;0;0;48;2;51;46;0m▄\x1B[38;2;7;9;0;48;2;120;107;0m▄\x1B[38;2;19;65;16;48;2;245;221;0m▄\x1B[38;2;18;68;18;48;2;47;42;0m▄\x1B[38;2;18;68;18;48;2;18;62;14m▄\x1B[38;2;18;68;18;48;2;30;35;0m▄\x1B[38;2;18;68;18;48;2;25;49;6m▄\x1B[48;2;18;68;18m   \x1B[48;2;18;67;17m \x1B[38;2;18;68;18;48;2;2;12;2m▄\x1B[38;2;18;67;17;48;2;0;0;0m▄\x1B[38;2;22;58;10;48;2;4;20;4m▄\x1B[38;2;20;64;15;48;2;18;68;18m▄\x1B[48;2;18;68;18m  \x1B[38;2;203;192;1;48;2;146;154;6m▄\x1B[48;2;245;221;0m                 \x1B[m
\x1B[48;2;245;221;0m                                 \x1B[38;2;245;221;0;48;2;231;211;0m▄\x1B[48;2;245;221;0m \x1B[38;2;245;221;0;48;2;41;82;15m▄\x1B[38;2;245;221;0;48;2;39;81;16m▄\x1B[38;2;245;221;0;48;2;32;78;16m▄\x1B[38;2;245;221;0;48;2;214;200;1m▄\x1B[48;2;245;221;0m  \x1B[38;2;245;221;0;48;2;243;220;0m▄\x1B[48;2;245;221;0m      \x1B[38;2;245;221;0;48;2;53;92;14m▄\x1B[48;2;245;221;0m   \x1B[38;2;245;221;0;48;2;95;119;10m▄\x1B[48;2;245;221;0m                   \x1B[m
\x1B[48;2;245;221;0m                \x1B[38;2;241;217;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m \x1B[38;2;1;1;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m \x1B[38;2;0;0;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m   \x1B[38;2;106;95;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m  \x1B[38;2;236;212;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m   \x1B[38;2;205;185;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m \x1B[38;2;97;86;0;48;2;245;221;0m▄\x1B[38;2;221;199;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m \x1B[38;2;181;163;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m \x1B[38;2;131;118;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m      \x1B[38;2;0;0;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m \x1B[38;2;178;160;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m \x1B[38;2;131;118;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m   \x1B[38;2;236;212;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m  \x1B[38;2;1;1;0;48;2;245;221;0m▄\x1B[38;2;81;73;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m \x1B[38;2;67;59;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m            \x1B[m
\x1B[48;2;245;221;0m              \x1B[38;2;142;129;0;48;2;245;221;0m▄\x1B[38;2;245;221;0;48;2;177;159;0m▄\x1B[38;2;41;37;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m \x1B[38;2;51;45;0;48;2;133;119;0m▄\x1B[48;2;245;221;0m  \x1B[38;2;225;203;0;48;2;224;202;0m▄\x1B[48;2;245;221;0m  \x1B[48;2;106;95;0m \x1B[48;2;245;221;0m      \x1B[48;2;205;185;0m \x1B[38;2;245;221;0;48;2;242;218;0m▄\x1B[38;2;4;4;0;48;2;245;221;0m▄\x1B[48;2;221;199;0m \x1B[48;2;245;221;0m \x1B[38;2;2;2;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m \x1B[38;2;245;221;0;48;2;220;198;0m▄\x1B[38;2;242;218;0;48;2;0;0;0m▄\x1B[48;2;245;221;0m  \x1B[38;2;203;183;0;48;2;245;221;0m▄\x1B[38;2;245;221;0;48;2;61;53;0m▄\x1B[48;2;245;221;0m \x1B[38;2;5;4;0;48;2;233;210;0m▄\x1B[48;2;245;221;0m \x1B[38;2;16;15;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m  \x1B[38;2;245;221;0;48;2;27;24;0m▄\x1B[48;2;245;221;0m  \x1B[38;2;223;201;0;48;2;236;212;0m▄\x1B[38;2;245;221;0;48;2;0;0;0m▄\x1B[38;2;245;221;0;48;2;203;183;0m▄\x1B[48;2;1;1;0m \x1B[48;2;81;73;0m \x1B[48;2;245;221;0m \x1B[38;2;134;121;0;48;2;245;221;0m▄\x1B[48;2;245;221;0m            \x1B[m
\x1B[48;2;245;221;0m                                                                        \x1B[m
\x1B[48;2;245;221;0m                                                                        \x1B[m
\x1B[48;2;245;221;0m                                                                        \x1B[m
",
    hostname,
    osname,
    architecture,
    info.version().to_string().trim_matches('"'),
    shell,
    uptime.num_hours(),
    uptime.num_minutes() % 60,
    &windoww.2.current_horizontal_resolution,
    &windoww.2.current_vertical_resolution,
    &windoww.2.current_refresh_rate,
    &windoww.2.name.to_string(),
    &windoww.1.name.to_string() ,
    sys.used_memory() / 1024 / 1024,
    sys.total_memory() / 1024 / 1024,
    disks_info);
    /* println!("Host       : {}",hostname);
        println!("OS         : {} {}", osname, architecture);
        println!("Kernel     : {}",info.version().to_string().trim_matches('"'));
        println!("Shell      : {}", shell);
        println!("Uptime     : {} hs, {} min",uptime.num_hours(),uptime.num_minutes() % 60);
        println!("Resolution : {}x{} | {}hz",&windoww.2.current_horizontal_resolution,&windoww.2.current_vertical_resolution,&windoww.2.current_refresh_rate);
        println!("GPU        : {} ", &windoww.2.name.to_string());
        println!("CPU        : {}", &windoww.1.name.to_string());
        println!("Memory     : {} MB / {} MB",sys.used_memory() / 1024 / 1024,sys.total_memory() / 1024 / 1024);
        println!("Disk       : {}", disks_info);
    */
}

#[tokio::main]
async fn main() {
    display().await;
}
